{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "health-synapse"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"health-synapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'health-synapse-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:health-synapse.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"ls_adls_output_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_output'"
		},
		"ls_synapse_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_synapse'"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://health-key-vault.vault.azure.net/"
		},
		"health-synapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://healthstorageaccount.dfs.core.windows.net"
		},
		"ls_adls_output_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://healthstorageaccount.dfs.core.windows.net/"
		},
		"ls_http_input_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://firebasestorage.googleapis.com"
		},
		"ls_synapse_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "health-synapse.sql.azuresynapse.net"
		},
		"ls_synapse_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "shriji"
		},
		"ls_synapse_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "shriji"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/pl_copy_to_synapse')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "exec_fetch_data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_fetch_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "exec_data_cleaning",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "exec_fetch_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_data_cleaning",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "copy_to_synapse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "exec_data_cleaning",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "processed/cancer",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_synapse_input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_synapse_output",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-01T22:05:24Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pl_fetch_data')]",
				"[concat(variables('workspaceId'), '/pipelines/pl_data_cleaning')]",
				"[concat(variables('workspaceId'), '/datasets/ds_synapse_input')]",
				"[concat(variables('workspaceId'), '/datasets/ds_synapse_output')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pl_data_cleaning')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "data_cleaning_notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/shriji74@outlook.com/health-project/ingest_cancer_data"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-31T22:42:33Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pl_data_transformation')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "data_transforamtion_noteboojk",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/shriji74@outlook.com/health-project/transform_processed_data"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-31T23:38:13Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pl_fetch_data')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "copy_fetch_data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_http_input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_storage_output",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-31T22:42:33Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_http_input')]",
				"[concat(variables('workspaceId'), '/datasets/ds_storage_output')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pl_pipeline_runs')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "exec_pl_fetch_data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_fetch_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "exec_pl_clean_data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "exec_pl_fetch_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_data_cleaning",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "exec_pl_transform_data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "exec_pl_clean_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_data_transformation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-31T23:45:35Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pl_fetch_data')]",
				"[concat(variables('workspaceId'), '/pipelines/pl_data_cleaning')]",
				"[concat(variables('workspaceId'), '/pipelines/pl_data_transformation')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_http_input')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_http_input",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "v0/b/music-player-98871.appspot.com/o/heart_2022_with_nans.csv?alt=media&token=77f59255-5d75-46b3-80b1-635a45b7503b"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_http_input')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_storage_output')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_output",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cancer_data.csv",
						"folderPath": "raw",
						"fileSystem": "health-project"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_adls_output')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_synapse_input')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_output",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "processed/cancer",
						"fileSystem": "health-project"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "patient_state",
						"type": "UTF8"
					},
					{
						"name": "patient_gender",
						"type": "UTF8"
					},
					{
						"name": "general_health",
						"type": "UTF8"
					},
					{
						"name": "physical_health_days",
						"type": "DOUBLE"
					},
					{
						"name": "mental_health_days",
						"type": "DOUBLE"
					},
					{
						"name": "last_checkup_time",
						"type": "UTF8"
					},
					{
						"name": "physical_activities",
						"type": "UTF8"
					},
					{
						"name": "sleep_hours",
						"type": "DOUBLE"
					},
					{
						"name": "had_heart_attack",
						"type": "UTF8"
					},
					{
						"name": "had_angina",
						"type": "UTF8"
					},
					{
						"name": "had_stroke",
						"type": "UTF8"
					},
					{
						"name": "had_asthma",
						"type": "UTF8"
					},
					{
						"name": "had_skin_cancer",
						"type": "UTF8"
					},
					{
						"name": "had_copd",
						"type": "UTF8"
					},
					{
						"name": "had_depressive_disorder",
						"type": "UTF8"
					},
					{
						"name": "had_kidney_disease",
						"type": "UTF8"
					},
					{
						"name": "had_arthritis",
						"type": "UTF8"
					},
					{
						"name": "had_diabetes",
						"type": "UTF8"
					},
					{
						"name": "deaf_or_hard_of_hearing",
						"type": "UTF8"
					},
					{
						"name": "blind_or_vision_difficulty",
						"type": "UTF8"
					},
					{
						"name": "difficulty_concentrating",
						"type": "UTF8"
					},
					{
						"name": "difficulty_walking",
						"type": "UTF8"
					},
					{
						"name": "difficulty_dressing_bathing",
						"type": "UTF8"
					},
					{
						"name": "difficulty_errands",
						"type": "UTF8"
					},
					{
						"name": "smoker_status",
						"type": "UTF8"
					},
					{
						"name": "ecigarette_usage",
						"type": "UTF8"
					},
					{
						"name": "chest_scan",
						"type": "UTF8"
					},
					{
						"name": "race_ethnicity_category",
						"type": "UTF8"
					},
					{
						"name": "age_category",
						"type": "UTF8"
					},
					{
						"name": "height_in_meters",
						"type": "DOUBLE"
					},
					{
						"name": "weight_in_kilograms",
						"type": "DOUBLE"
					},
					{
						"name": "bmi",
						"type": "DOUBLE"
					},
					{
						"name": "alcohol_drinkers",
						"type": "UTF8"
					},
					{
						"name": "hiv_testing",
						"type": "UTF8"
					},
					{
						"name": "flu_vax_last_12",
						"type": "UTF8"
					},
					{
						"name": "pneumo_vax_ever",
						"type": "UTF8"
					},
					{
						"name": "tetanus_last_10_tdap",
						"type": "UTF8"
					},
					{
						"name": "high_risk_last_year",
						"type": "UTF8"
					},
					{
						"name": "covid_pos",
						"type": "UTF8"
					},
					{
						"name": "ingested_data",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_adls_output')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_synapse_output')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_synapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "patient_state",
						"type": "nvarchar"
					},
					{
						"name": "patient_sex",
						"type": "nvarchar"
					},
					{
						"name": "general_health",
						"type": "nvarchar"
					},
					{
						"name": "physical_health_days",
						"type": "int",
						"precision": 10
					},
					{
						"name": "mental_health_days",
						"type": "int",
						"precision": 10
					},
					{
						"name": "last_checkup_time",
						"type": "nvarchar"
					},
					{
						"name": "physical_activities",
						"type": "nvarchar"
					},
					{
						"name": "sleep_hours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "had_heart_attack",
						"type": "nvarchar"
					},
					{
						"name": "had_angina",
						"type": "nvarchar"
					},
					{
						"name": "had_stroke",
						"type": "nvarchar"
					},
					{
						"name": "had_asthma",
						"type": "nvarchar"
					},
					{
						"name": "had_skin_cancer",
						"type": "nvarchar"
					},
					{
						"name": "had_copd",
						"type": "nvarchar"
					},
					{
						"name": "had_depressive_disorder",
						"type": "nvarchar"
					},
					{
						"name": "had_kidney_disease",
						"type": "nvarchar"
					},
					{
						"name": "had_arthritis",
						"type": "nvarchar"
					},
					{
						"name": "had_diabetes",
						"type": "nvarchar"
					},
					{
						"name": "deaf_or_hard_of_hearing",
						"type": "nvarchar"
					},
					{
						"name": "blind_or_vision_difficulty",
						"type": "nvarchar"
					},
					{
						"name": "difficulty_concentrating",
						"type": "nvarchar"
					},
					{
						"name": "difficulty_walking",
						"type": "nvarchar"
					},
					{
						"name": "difficulty_dressing_bathing",
						"type": "nvarchar"
					},
					{
						"name": "difficulty_errands",
						"type": "nvarchar"
					},
					{
						"name": "smoker_status",
						"type": "nvarchar"
					},
					{
						"name": "ecigarette_usage",
						"type": "nvarchar"
					},
					{
						"name": "chest_scan",
						"type": "nvarchar"
					},
					{
						"name": "race_ethnicity_category",
						"type": "nvarchar"
					},
					{
						"name": "age_category",
						"type": "nvarchar"
					},
					{
						"name": "height_in_meters",
						"type": "float",
						"precision": 15
					},
					{
						"name": "weight_in_kilograms",
						"type": "float",
						"precision": 15
					},
					{
						"name": "bmi",
						"type": "float",
						"precision": 15
					},
					{
						"name": "alcohol_drinkers",
						"type": "nvarchar"
					},
					{
						"name": "hiv_testing",
						"type": "nvarchar"
					},
					{
						"name": "flu_vax_last_12",
						"type": "nvarchar"
					},
					{
						"name": "pneumo_vax_ever",
						"type": "nvarchar"
					},
					{
						"name": "tetanus_last_10_tdap",
						"type": "nvarchar"
					},
					{
						"name": "high_risk_last_year",
						"type": "nvarchar"
					},
					{
						"name": "covid_pos",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "heart_disease_data_internal"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_synapse')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDatabricks1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1379301261271386.6.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "0531-164857-vo8whvkx"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureKeyVault')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/health-synapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('health-synapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/health-synapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('health-synapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_adls_output')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_output_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_output_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_http_input')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_input_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_synapse')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('ls_synapse_properties_typeProperties_server')]",
					"database": "[parameters('ls_synapse_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_synapse_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_synapse_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/schedule_trigger')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_pipeline_runs",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2024-06-07T05:56:00",
						"timeZone": "Eastern Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pl_pipeline_runs')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- Create Table with ROUND_ROBIN Distribution\nCREATE TABLE Average_BMI\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT patient_state, CEILING(AVG(bmi)) AS average_bmi \nFROM dbo.heart_disease_data_internal\nGROUP BY patient_state;\n\n\n\n\n\n--Count of Heart Attack Cases by Age Category\nCREATE TABLE Heart_Attack_Count\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT age_category,COUNT(CASE WHEN had_heart_attack = 'Yes' THEN 1 END) AS heart_attack_count FROM dbo.heart_disease_data_internal\nGROUP BY age_category\n\n\n-- Distribution of Health Conditions by State\nCREATE TABLE Health_Condition_State\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT patient_state,\nCOUNT(CASE WHEN had_heart_attack = 'Yes' THEN 1 END) AS heart_attack_count,\nCOUNT(CASE WHEN had_stroke = 'Yes' THEN 1 END) AS stroke_count,\nCOUNT(CASE WHEN had_diabetes = 'Yes' THEN 1 END) AS diabetes_count\nFROM dbo.heart_disease_data_internal\nGROUP BY patient_state\n\n\n\n-- Correlation Between Sleep Hours and BMI\nCREATE TABLE Sleep_Hours_BMI\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT sleep_hours, CEILING(AVG(bmi)) AS avg_bmi\nFROM dbo.heart_disease_data_internal\nGROUP BY sleep_hours\n\n\n\n--Impact of Physical Activities on Heart Attack Cases\nCREATE TABLE PhysicalActivites_Heart_Attack\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT physical_activities, COUNT(*) AS total_cases,\n       COUNT(CASE WHEN had_heart_attack = 'Yes' THEN 1 END) AS heart_attack_cases\nFROM dbo.heart_disease_data_internal\nGROUP BY physical_activities\n\n\n\n\n\n--Frequency of Smoking Status by Gender\nCREATE TABLE Smoke_Status\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT patient_gender, smoker_status, COUNT(*) AS frequency\nFROM dbo.heart_disease_data_internal\nGROUP BY patient_gender, smoker_status\n\n\n\n--Count of Different Health Conditions by Age Category\nCREATE TABLE Health_Condition_Age_Category\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT age_category,\n       COUNT(CASE WHEN had_asthma = 'Yes' THEN 1 END) AS asthma_count,\n       COUNT(CASE WHEN had_skin_cancer = 'Yes' THEN 1 END) AS skin_cancer_count,\n       COUNT(CASE WHEN had_copd = 'Yes' THEN 1 END) AS copd_count,\n       COUNT(CASE WHEN had_depressive_disorder = 'Yes' THEN 1 END) AS depressive_disorder_count,\n       COUNT(CASE WHEN had_kidney_disease = 'Yes' THEN 1 END) AS kidney_disease_count\nFROM dbo.heart_disease_data_internal\nGROUP BY age_category\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "shriji",
						"poolName": "shriji"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- Create the internal table \nCREATE TABLE dbo.heart_disease_data_internal (\n    patient_state NVARCHAR(100),\n    patient_gender NVARCHAR(100),\n    general_health NVARCHAR(100),\n    physical_health_days INT,\n    mental_health_days INT,\n    last_checkup_time NVARCHAR(100),\n    physical_activities NVARCHAR(100),\n    sleep_hours FLOAT,\n    had_heart_attack NVARCHAR(100),\n    had_angina NVARCHAR(100),\n    had_stroke NVARCHAR(100),\n    had_asthma NVARCHAR(100),\n    had_skin_cancer NVARCHAR(100),\n    had_copd NVARCHAR(100),\n    had_depressive_disorder NVARCHAR(100),\n    had_kidney_disease NVARCHAR(100),\n    had_arthritis NVARCHAR(100),\n    had_diabetes NVARCHAR(100),\n    deaf_or_hard_of_hearing NVARCHAR(100),\n    blind_or_vision_difficulty NVARCHAR(100),\n    difficulty_concentrating NVARCHAR(100),\n    difficulty_walking NVARCHAR(100),\n    difficulty_dressing_bathing NVARCHAR(100),\n    difficulty_errands NVARCHAR(100),\n    smoker_status NVARCHAR(100),\n    ecigarette_usage NVARCHAR(100),\n    chest_scan NVARCHAR(100),\n    race_ethnicity_category NVARCHAR(100),\n    age_category NVARCHAR(100),\n    height_in_meters FLOAT,\n    weight_in_kilograms FLOAT,\n    bmi FLOAT,\n    alcohol_drinkers NVARCHAR(100),\n    hiv_testing NVARCHAR(100),\n    flu_vax_last_12 NVARCHAR(100),\n    pneumo_vax_ever NVARCHAR(100),\n    tetanus_last_10_tdap NVARCHAR(100),\n    high_risk_last_year NVARCHAR(100),\n    covid_pos NVARCHAR(100),\n    ingested_data NVARCHAR(100)\n)\nWITH (\n    DISTRIBUTION = HASH(patient_state) \n);\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "shriji",
						"poolName": "shriji"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE cleaned_retail_data (\n    invoice_no NVARCHAR(100),\n    stock_code NVARCHAR(100),\n    description NVARCHAR(255),\n    quantity INT,\n    invoice_date DATETIME,\n    unit_price FLOAT,\n    customer_id INT,\n    country NVARCHAR(100),\n    total_price FLOAT,\n    transaction_id NVARCHAR(100),\n    invoice_year INT,\n    invoice_month INT,\n    invoice_dayof_week NVARCHAR(100)\n)\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n);\n\n\n\nSELECT * FROM cleaned_retail_data",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "shriji",
						"poolName": "shriji"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 4')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- Total sales by country\nCREATE TABLE Total_sales_country\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT country, SUM(total_price) AS total_sales\nFROM cleaned_retail_data\nGROUP BY country\n\n\n\n-- Average unit price by stock code\nCREATE TABLE Average_Price_Stock\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT stock_code, ROUND(AVG(unit_price), 2) AS avg_unit_price\nFROM cleaned_retail_data\nGROUP BY stock_code\n\n\n\n-- Monthly sales trends\nCREATE TABLE Monthly_Sales\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT invoice_year, invoice_month, SUM(total_price) AS total_sales\nFROM cleaned_retail_data\nGROUP BY invoice_year, invoice_month\n\n\n\n-- Customer purchase patterns\nCREATE TABLE Purchase_Patterns\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT customer_id, COUNT(*) AS number_of_purchases, SUM(total_price) AS total_spent\nFROM cleaned_retail_data\nGROUP BY customer_id\n\n\n\n-- Transactions with high quantities\nCREATE TABLE Transactions_with_quantities\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS\nSELECT invoice_no, stock_code, quantity, total_price\nFROM cleaned_retail_data\nWHERE quantity > 100\n\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "shriji",
						"poolName": "shriji"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/shriji')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}